nextflow.enable.dsl=2

// Default parameters that can be overridden
params {
    // Show help message
    help = false
    // Alternative workflow for initialisation only
    init = false
    // Alternative workflow for getting versions of pipeline and tools
    version = false

    // Default directory for input reads
    reads = "$projectDir/input"
    // Default output directory
    output = "$projectDir/output"

    // Default assembler
    assembler = "shovill"
    // Default minimum contig length
    min_contig_length = 500
    // Default assembly publish mode
    assembly_publish = "link"

    // Default git repository and local directory, and KMC kmer size for SeroBA 
    seroba_db_remote = "https://github.com/sanger-pathogens/seroba.git"
    seroba_db_local = "$projectDir/databases/seroba"
    seroba_kmer = 71

    // Default link and local directory for Kraken2 Database, and usage of memory mapping
    kraken2_db_remote = "https://genome-idx.s3.amazonaws.com/kraken/minikraken2_v1_8GB_201904.tgz"
    kraken2_db_local = "$projectDir/databases/kraken"
    kraken2_memory_mapping = true

    // Default referece genome assembly path and local directory for its BWA database 
    ref_genome = "$projectDir/data/ATCC_700669_v1.fa"
    ref_genome_bwa_db_local =  "$projectDir/databases/bwa_ref_db"

    // Default links for PopPUNK Database and External Clusters, and local directory for both
    poppunk_db_remote = "https://gps-project.cog.sanger.ac.uk/GPS_v6.tar.gz"
    poppunk_ext_remote = "https://www.pneumogen.net/gps/GPS_v6_external_clusters.csv"
    poppunk_db_local = "$projectDir/databases/poppunk"

    // Default values for QC
    spneumo_percentage = 60.00
    ref_coverage = 60.00
    het_snp_site = 220
    contigs = 500
    length_low = 1900000
    length_high = 2300000
    depth = 20.00

    // Default ARIBA referece sequences and metadata paths, and local directory for its generated database
    ariba_ref = "$projectDir/data/ariba_ref_sequences-20230712.fasta"
    ariba_metadata =  "$projectDir/data/ariba_metadata-20230712.tsv"
    ariba_db_local = "$projectDir/databases/ariba"

    // Toggle for removing .bam and .sam files mid-run to reduce storage requirement
    // Warning: This will break the -resume function of Nextflow  
    lite = false
}

// Set process container images
process {
    withLabel: bash_container {
        container = 'wbitt/network-multitool:69aa4d5'
    }
    withLabel: git_container{
        container = 'bitnami/git:2.39.0'
    }
    withLabel: python_container {
        container = 'amancevice/pandas:2.0.2'
    }
    withLabel: fastp_container {
        container = 'staphb/fastp:0.23.2'
    }
    withLabel: unicycler_container {
        container = 'staphb/unicycler:0.5.0'
    }
    withLabel: shovill_container {
        container = 'staphb/shovill:1.1.0-2022Dec'
    }
    withLabel: quast_container {
        container = 'staphb/quast:5.0.2'
    }
    withLabel: bwa_container {
        container = 'staphb/bwa:0.7.17'
    }
    withLabel: samtools_container {
        container = 'staphb/samtools:1.16'
    }
    withLabel: bcftools_container {
        container = 'staphb/bcftools:1.16'
    }
    withLabel: poppunk_container {
        container = 'staphb/poppunk:2.6.0'
    }
    withLabel: spn_pbp_amr_container {
        container = 'harryhungch/spn-pbp-amr:23.01.16'
    }
    withLabel: ariba_container {
        container = 'staphb/ariba:2.14.6'
    }
    withLabel: mlst_container {
        container = 'staphb/mlst:2.23.0-2023-07'
    }
    withLabel: kraken2_container {
        container = 'staphb/kraken2:2.1.2-no-db'
    }
    withLabel: seroba_container {
        container = 'harryhungch/seroba:1.0.3'
    }
}

// Set parameters of different run environments
profiles {

    // Default Profile for local machine
    // Docker as container engine, execute by local machine
    standard {
        process{
            executor = 'local'
        }
        docker {
            enabled = true
            runOptions = '-u $(id -u):$(id -g)'
        }
    }

    // Alternative Profile for local machine
    // Singularity as container engine, execute by local machine
    singularity {
        params.singularity_cachedir = "$projectDir/singularity_cache"

        singularity {
            enabled = true
            autoMounts = true
            cacheDir = params.singularity_cachedir
        }
    }

    // Profile for LSF, tested on Sanger farm5
    // Singularity as container engine, execute by LSF
    lsf {
        params.singularity_cachedir = "$projectDir/singularity_cache"
        params.maxretries = 4
        params.kraken2_memory_mapping = false

        process {
            executor = 'lsf'
            scratch = true
            time = {30.min * task.attempt}
            withLabel: farm_low {
                cpus = 1
                memory = {1.GB * task.attempt}
                errorStrategy = 'retry'
                maxRetries = params.maxretries
            }
            withLabel: farm_mid {
                cpus = 8
                memory = {4.GB * task.attempt}
                errorStrategy = 'retry'
                maxRetries = params.maxretries
            }
            withLabel: farm_high {
                cpus = 32
                memory = {16.GB * task.attempt}
                errorStrategy = 'retry'
                maxRetries = params.maxretries
            }
            withLabel: farm_high_fallible {
                cpus = 32
                memory = {16.GB * task.attempt}
                errorStrategy = { task.attempt <= params.maxretries ? 'retry' : 'ignore' }
                maxRetries = params.maxretries
            }
            withLabel: farm_slow {
                time = {2.hour * task.attempt}
            }
            withLabel: farm_scratchless {
                scratch = false
            }
            withLabel: farm_local {
                executor = 'local'
            }
        }
        executor {
            perJobMemLimit = true
        }
        singularity {
            enabled = true
            autoMounts = true
            cacheDir = params.singularity_cachedir
        }
    }
    sangertower {
        tower {
            enabled = true
            endpoint = 'https://tower.internal.sanger.ac.uk/api/'
        }
    }

}
